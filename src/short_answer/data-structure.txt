***ANSWER ALL OF THE QUESTIONS BELOW***

Why do we need data structure?
Answer: data structure needed because Java programmers use data structures to store and organize data. Data structures also
           make it easy to locate and retrieve data we use in algorithms to manipulate the data in those structures.

What are the various operations that can be performed on different data structures?
Answer: Basic operations you can perform on Data Structures are are:
            Insertion − Add a new data item in the data structure .
            Deletion − Delete an existing data item from the data structure.
            Traversal − Access each data item exactly once so that it can be processed.
            Searching − Find out the location of the data item if it exists in the data structure
            Sorting − Arranging the data items in some order

When would we use data structures in the real world?
Answer: Data structures can be applied in areas of:
            Compiler Design
            Operating System
            Database Management System
            Statistical analysis package
            Numerical Analysis
            Graphics
            Artificial Intelligence
            Simulation

What is an Array?
Ans: An array is a container object that holds a fixed number of values of a single type.

What is the difference between the Array and ArrayList?
Ans: Array is a fixed length data structure whereas ArrayList is a variable length Collection class.
    We cannot change the length of an array once created in Java but ArrayList can be changed.

What is LinkedList?
Ans: The LinkedList class is a collection which can contain many objects of the same type, just like the ArrayList.

How is an Array different from Linked List?
Ans: An array is a collection of elements of a similar data type whereas Linked List is an ordered collection of elements of the same type in which each element is connected to the next using pointers.

What is queue?
Ans: Queue is an interface available in java. util package and extends java.

What is stack?
Ans: A Stack is a Last In First Out (LIFO) data structure. It supports two basic operations called push and pop.

What are FIFO and LIFO?
Ans: FIFO is an abbreviation for first in, first out. It is a method for handling data structures where the first element is processed first and the newest element is processed last.
    LIFO is an abbreviation for Last in, first out is same as fist in, last out (FILO). It is a method for handling data structures where the last element is processed first and the first element is processed last.

Explain Big O Notation?
Answer:  Big O Notation is a relative representation of an algorithm's complexity. Generally, an algorithm has an asymptotic computational complexity. Assuming the input is of size N, we can say that the algorithm will finish at O(N), O(N^2), O(N^3), O(N*log(N)) etc.

What is the best case to search an element from an array?
Ans: The best case to search an element for an array is by converting an Array to an ArrayList.

What is the worst case to search an element from an array?
Ans: The worst case to search an element for an array is by using a for-each loop.

What is tree in data structure?
Ans: In data structure a Tree is a non-linear data structure where data objects are organized in terms of a hierarchical relationship.

What is graph in data structure?
Ans: A graph is a data structure for sorting connected data like a network of people on a social media platform.

What is the difference between the HashTable and HashMap?
Ans: HashMap isn't synchronized, and it doesn't allow any null key or value and a HashTable is synchronized which allows multiple null value.

How do HashMaps work in Java? How do they store values, and when are they useful?
Answer: It allows to store object and retrieve it when provided with key and value

What is ArrayIndexOutOfBoundsException in java? When does it occur?
Answer: ArrayIndexOutOfBoundsException is thrown to indicate that we are trying to access an array element with an illegal index.
            This exception occurs when the index is either negative or greater than or equal to the size of the array.

What are the different ways of copying an array into another array?
Answer: There are mainly four different ways of copying an array into another array:
            Manually copy elements one by one into the new array.
            Directly copy one array to another by using Arrays.copyOf() method.
            System.arraycopy() method can be used to copy a subset of an array.
            Object.clone() method creates a new array of the same size.

What is DFS and BFS?
Answer: DFS is an algorithm for finding or traversing graphs or trees in depth-ward direction. The execution of the algorithm begins at the root node and explores each branch before backtracking.
            It uses a stack data structure to remember, to get the subsequent vertex, and to start a search, whenever a dead-end appears in any iteration. The full form of DFS is Depth-first search.

            - BFS is an algorithm that is used to graph data or searching tree or traversing structures. The algorithm efficiently visits and marks all the key nodes in a graph in an accurate breadthwise fashion.
            his algorithm selects a single node (initial or source point) in a graph and then visits all the nodes adjacent to the selected node. Once the algorithm visits and marks the starting node, then it moves towards the nearest unvisited nodes and analyses them.
            Once visited, all nodes are marked. These iterations continue until all the nodes of the graph have been successfully visited and marked. The full form of BFS is the Breadth-first search.


What is Recursion?
Answer: Recursion is the technique of making a function call itself.

What are linear and non-linear data Structures?
Answer: Data structure where data elements are arranged sequentially or linearly where the elements are attached to its previous and next adjacent in what is called a linear data structure.
            Data structures where data elements are not arranged sequentially or linearly are called non-linear data structures.

Outline different sorting algorithms and their time complexities:

Selection Sort:	O(n^2)
Bubble Sort:	O(n)
Insertion Sort:	O(n)
Heap Sort:	O(n log(n))
Quick Sort:	O(n log(n))
Merge Sort:	O(n log(n))
Bucket Sort:	O(n +k)
Radix Sort:	O(nk)
Count Sort:	O(n +k)
Shell Sort:	O(n log(n))
Tim Sort:	O(n)
Tree Sort:	O(n log(n))
Cube Sort:	O(n)
